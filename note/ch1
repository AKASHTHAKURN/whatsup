Chapter 01. 소프트웨어 공학 소개

[요약]

01. 소프트웨어의 개념
프로그램(코드)을 비롯해 개발 과정에서 생성되는 모든 산출물(자료 구조, 데이터베이스 구조, 테스트 결과 등)을 포함하고, 각 단계에서 만들어지는 문서와 사용자 매뉴얼 등도 포함한다. 즉 소프트웨어는 프로그램뿐 아니라 그 이상의 것도 포함하는 매우 포괄적인 개념이다.

02. 소프트웨어의 분류
• 관리 소프트웨어 : 자료를 받아들여 가공한 후 정보를 제공한다.
• 제어 소프트웨어 : 단순히 데이터베이스를 이용하여 자료를 처리해서 정보를 제공하는 형태가 아닌, 각종 센서를 이용하거나 기기들의 동작을 제어하는 소프트웨어이다.
• 임베디드 소프트웨어 : 장비나 기기에 내장된(embedded) 형태이다.

03. 소프트웨어의 특징
• 제조가 아닌 개발
• 소모가 아닌 품질 저하

04. 소프트웨어의 당면 문제
• 소프트웨어 개발의 느린 발전 속도
• 새로운 소프트웨어에 대한 사용자 요구의 증가
• 관리 기술의 부분적 활용

05. 소프트웨어 개발의 어려움
개발 과정이 복잡하고 많은 인력이 참여해야 한다. 또한 개발 기간이 길다.

06. 소프트웨어 공학의 정의와 목표
품질 좋은 소프트웨어를 경제적으로 개발하기 위해 계획을 세우고 개발하며 유지 및 관리하는 전 과정에서 공학, 과학 및 수학적 원리와 방법을 적용하여 필요한 이론과 기술 및 도구들에 관해 연구하는 학문이다. 소프트웨어 개발 과정의 생산성을 높이고, 고품질의 소프트웨어를 생산하여 사용자를 만족시키는 것이 목표이다.

07. 소프트웨어 개발 단계
계획 단계→요구 분석 단계→설계 단계→구현 단계→테스트 단계→유지보수 단계

08. 계획 단계
기능 점수 모델과 COCOMO 모델 등을 이용하여 비용을 산정하고, 작업 분할 구조도(WBS)를 이용하여 프로젝트를 작은 단위로 나눈다. 또한 CPM과 같은 네트워크 차트를 이용하여 작업 일정을 관리한다.

09. 요구 분석 단계
기존 시스템의 문제점을 파악하고, 사용자 인터뷰를 통해 새로운 요구 사항을 도출하여 수집한다.

10. 설계 단계
분석 단계에서 표현한 유스케이스 다이어그램과 클래스 다이어그램을 가지고 코딩할 수 있는 수준으로 환경에 밀접하게 구체화한다.

11. 구현 단계
구현 단계에서는 프로그램을 작성한다. 여러 사람이 함께 하는 작업에는 따라야 할 규칙이 존재한다. 구현할 때도 마찬가지이다. 많은 사람이 함께 작업하기 때문에 규칙이 존재한다.

12. 테스트 단계
코딩이 완료된 후 제품을 출시하기 전에 여러 테스트 기법을 사용하여 오류를 찾아내는데 다음과 같은 프로세스로 수행된다.

① 테스트 계획
② 테스트 케이스 설계
③ 테스트 실행 및 측정
④ 결과 분석 및 평가
⑤ 오류 추적 및 수정

13. 유지보수 단계
사용자가 소프트웨어를 사용하다가 추가, 변경 요구를 하면 이에 대해 적절한 조치를 해준다.

14. 품질 관리
제품 품질 특성 평가와 프로세스 품질 특성 평가를 이용하여 개발된 소프트웨어가 사용자의 요구 사항을 얼마나 만족시키는지를 점검한다.

15. 프로젝트 관리
프로젝트가 예정된 기간과 주어진 비용 안에서 요구하는 품질을 만족시키도록 프로젝트가 시작될 때부터 끝날 때까지 관리한다.

[네이버 지식백과] 요약 (쉽게 배우는 소프트웨어 공학, 2015. 11. 30., 김치수)
