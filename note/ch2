쉽게 배우는 소프트웨어 공학, 2015. 11. 30., 김치수
Chapter 02. 소프트웨어 개발 프로세스

[요약]

01. 소프트웨어 개발 프로세스
소프트웨어 개발 프로세스란 소프트웨어 제품을 개발할 때 필요한 절차, 과정 그리고 구조를 일컫는 말로, 사용자의 요구 사항을 소프트웨어 시스템으로 구현하기 위한 일련의 활동이라 할 수 있다. 또한 이러한 절차나 구조뿐 아니라, 그 작업을 수행하는 데 필요한 방법과 도구, 개발 관련 참여자들까지도 포함하는 통합적인 개념이다.

02. 소프트웨어 프로세스 모델
소프트웨어 프로세스 모델은 소프트웨어 개발 생명주기(SDLC: Software Development Life Cycle)라고도 한다. 소프트웨어 개발 방법에 대한 전체적인 흐름을 체계화한 개념으로, 개발 계획 수립부터 최종 폐기 때까지의 전 과정을 다루고 있다. 순차적인 단계로 이루어져 있다.

03. 주먹구구식 모델
주먹구구식 모델은 공식적인 가이드라인이나 프로세스가 없는 개발 방식이다. 즉 요구 분석 명세서나 설계 단계 없이 간단한 기능만을 정리하여 개발하는 형태를 말한다.

04. 폭포수 모델 (선형 순차적 모델)
폭포에서 물이 떨어지듯이 앞 단계에서 다음 단계로 넘어가는 개발 방식을 폭포수 모델(Waterfall Model)이라고 하며, 고전적 생명주기(Classic Life Cycle)라고도 한다. 이 모델은 소프트웨어 공학의 대명사로 여겨질 만큼 소프트웨어 프로세스 개발 초기에 등장한 전통적인 모델이다. 공장 생산 라인의 작업 프로세스와 유사한데, 소프트웨어 개발의 표준적인 프로세스를 정하여 소프트웨어를 순차적으로 개발한다.
=> 프로세스 중심 모델
WBS 세부작업
CPM 작업순서
간트차트 일정표

05. V 모델
V 모델은 폭포수 모델의 변형으로, 테스트 단계를 추가·확장하여 테스트 단계가 분석 및 설계와 어떻게 관련되어 있는지를 나타낸다. 폭포수 모델이 산출물 중심이라면 
=> V 모델은 각 개발 단계를 검증하는 데 초점을 둔 모델이다.

06. 진화적 프로세스 모델(프로토타입 모델)
진화적 프로세스 모델의 특징은 프로토타입을 만들어 사용자 요구 사항을 점증적으로 반영한다는 것이다. 우선 개발자는 사용자 요구 사항에 따라 가상으로 실행되는 초기 버전의 프로토타입을 만들고, 사용자는 사용자 인터페이스 중심의 화면과 실행 후 나타나는 가상의 결과 화면을 확인한다. 그런 다음 개발자는 변경·추가된 사용자 요구 사항을 반영하여 2차 프로토타입을 만들어 사용자에게 보여준다. 이 같은 작업을 반복하여 최종 제품을 완성시키는 모델이다.
=> 프로토타입 N차 

07. 나선형 모델
나선형 모델은 초기 요구 정의 및 분석 후 프로토타입 개발 이전에 위험 분석 단계를 거치는 모델이다. 개발자는 1차 프로토타입을 만들어 사용자의 평가와 추가·수정 요구를 받는다. 그리고 다시 위험 분석을 거쳐 2차 프로토타입을 만든다. 이렇게 3차, 4차, ··· n차를 거치는 동안 사용자의 요구가 충분히 반영되어, 만족할 만한 최종 제품이 만들어진다.
=> 프로토타입 + 위험분석 -> N차 반복

*08. 단계적 개발 모델
단계적 개발 모델은 개발과 사용을 병행하면서 진행하는 모델이다. 개발자가 릴리스 1을 개발하여 사용자에게 제공하면 사용자는 릴리스 1을 사용한다. 그동안 개발자는 다음 버전인 릴리스 2를 개발한다. 이와 같은 과정을 반복·진행하여 완성한다.
=> 릴리스1 -> 릴리스2 -> ....

- 점증적 개발
중요하다고 생각되는 부분부터 차례로 개발한 후 그 일부를 사용하면서 개발 범위를 점차 늘려가는 방식

- 반복적 개발
초기에 시스템 전체를 일차적으로 개발하여 인도한 후, 각 서브시스템의 기능과 성능을 변경 및 보강하여 완성도를 높인다. 이렇게 업그레이드된 릴리스 버전을 다시 내놓는 것

09. 통합 프로세스 모델
통합 프로세스(UP) 모델은 크게 4단계(도입, 구체화, 구축, 전이)로 구성되어 있으며 각 단계도 여러 개의 작은 단위(반복, iteration)로 나뉜다. 그리고 이러한 반복 구간을 하나씩 정복해나간다. 각각의 반복 주기가 시작되기 전에 기준선(베이스라인) 계획이 세워지고, 반복 주기가 끝난 수행 결과에는 실행 가능한 산출물이 도출된다.

10. 애자일 프로세스 모델
폭포수 모델처럼 계획을 기반으로 하는 프로세스 중심의 전통적인 모델은 산출물 위주의 거대하고 무거운 방법론에 해당한다. 이러한 방법론의 가장 큰 문제점은 요구 사항의 변화에 유연하게 대처하기 어렵다는 점이다. 따라서 가볍고, 비교적 변화를 수용하기 쉬운 방법론이 필요하다. 이러한 필요에 따라 등장한 모델이 애자일 프로세스 모델로, 스크럼(scrum), 익스트림 프로그래밍(XP), 크리스털 패밀리(crystal family)와 같은 방법론이다.


[네이버 지식백과] 요약 (쉽게 배우는 소프트웨어 공학, 2015. 11. 30., 김치수)
