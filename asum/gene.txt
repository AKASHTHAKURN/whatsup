package com.lgcns.tct.gene;

import java.util.HashMap;

public class Gene {

	public int measureSimpleComparison_1(String inputData) {

		String[] str = inputData.split(",");
		int size = str[0].length()*2 + str[1].length();
		int i;		

		StringBuilder sb2 = new StringBuilder();
		for(i=0; i<str[0].length(); i++) {
			sb2.append("*");
		}
		sb2.append(str[1]);
		for(i=size-str[0].length(); i<size; i++) {
			sb2.append("*");
		}
		System.out.println(sb2);

		StringBuilder sb1 = new StringBuilder();
		sb1.append(str[0]);
		for(i=str[0].length(); i<size; i++) {
			sb1.append("_");
		}
		System.out.println(sb1);

		int max=0;
		for(int k=0; k<size-str[0].length(); k++ ) {
			int same = 0;
			for(i=0; i<size; i++) {
				if(sb1.charAt(i) == sb2.charAt(i))
					same++;
			}
		
			if(same>max) 
				max = same;
			
			sb1.insert(0, "_");
			sb1.deleteCharAt(sb1.length()-1);
			System.out.println(sb1);
		}	
		
		return max;
	}

	
	public String makeStr(String str, int offset, int total, String blank) {
	
		StringBuilder sb = new StringBuilder();
		
		for(int i=0; i<offset; i++)
			sb.append(blank);

		sb.append(str);
				
		for(int i=offset+str.length(); i<total; i++)
			sb.append(blank);

		return sb.toString();
	}	
	
	public int measureSortComparison(String inputData, int[][] similarityMatrix) {

		HashMap<Character, Integer> m = new HashMap<Character, Integer>();
		m.put('A', 0);
		m.put('C', 1);
		m.put('G', 2);
		m.put('T', 3);
		m.put('*', 4);

		String[] str = inputData.split(",");
		int size = str[0].length()*2 + str[1].length();
		int i;		

		StringBuilder sb2 = new StringBuilder();
		for(i=0; i<str[0].length(); i++) {
			sb2.append("*");
		}
		sb2.append(str[1]);
		for(i=size-str[0].length(); i<size; i++) {
			sb2.append("*");
		}
		System.out.println(sb2);

		StringBuilder sb1 = new StringBuilder();
		sb1.append(str[0]);
		for(i=str[0].length(); i<size; i++) {
			sb1.append("*");
		}
		System.out.println(sb1);
		
		int max=0;
		for(int k=0; k<size-str[0].length(); k++ ) {
			int same = 0;
			for(i=0; i<size; i++) {
				same += similarityMatrix[ m.get(sb1.charAt(i)) ]
										[ m.get(sb2.charAt(i)) ];
			}
		
			if(same>max) 
				max = same;
			
			sb1.insert(0, "*");
			sb1.deleteCharAt(sb1.length()-1);
			System.out.println(sb1);
		}	
		
		return max;
	}
}
